<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Apis.Firestore.v1</name>
    </assembly>
    <members>
        <member name="T:Google.Apis.Firestore.v1.FirestoreService">
            <summary>The Firestore Service.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.FirestoreService.Version">
            <summary>The API version.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.FirestoreService.DiscoveryVersionUsed">
            <summary>The discovery version used to generate this service.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.FirestoreService.#ctor">
            <summary>Constructs a new service.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.FirestoreService.#ctor(Google.Apis.Services.BaseClientService.Initializer)">
            <summary>Constructs a new service.</summary>
            <param name="initializer">The service initializer.</param>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreService.Features">
            <summary>Gets the service supported features.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreService.Name">
            <summary>Gets the service name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreService.BaseUri">
            <summary>Gets the service base URI.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreService.BasePath">
            <summary>Gets the service base path.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.FirestoreService.Scope">
            <summary>Available OAuth 2.0 scopes for use with the Cloud Firestore API.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.FirestoreService.Scope.CloudPlatform">
            <summary>View and manage your data across Google Cloud Platform services</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.FirestoreService.Scope.Datastore">
            <summary>View and manage your Google Cloud Datastore data</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreService.Projects">
            <summary>Gets the Projects resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1">
            <summary>A base abstract class for Firestore requests.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new FirestoreBaseServiceRequest instance.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.Xgafv">
            <summary>V1 error format.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.XgafvEnum">
            <summary>V1 error format.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.XgafvEnum.Value1">
            <summary>v1 error format</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.XgafvEnum.Value2">
            <summary>v2 error format</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.AccessToken">
            <summary>OAuth access token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.Alt">
            <summary>Data format for response.</summary>
            [default: json]
        </member>
        <member name="T:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.AltEnum">
            <summary>Data format for response.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.AltEnum.Json">
            <summary>Responses with Content-Type of application/json</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.AltEnum.Media">
            <summary>Media download with context-dependent Content-Type</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.AltEnum.Proto">
            <summary>Responses with Content-Type of application/x-protobuf</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.Callback">
            <summary>JSONP</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.Fields">
            <summary>Selector specifying which fields to include in a partial response.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.Key">
            <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
            Required unless you provide an OAuth 2.0 token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.OauthToken">
            <summary>OAuth 2.0 token for the current user.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.PrettyPrint">
            <summary>Returns response with indentations and line breaks.</summary>
            [default: true]
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.QuotaUser">
            <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
            assigned to a user, but should not exceed 40 characters.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.UploadType">
            <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.UploadProtocol">
            <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.FirestoreBaseServiceRequest`1.InitParameters">
            <summary>Initializes Firestore parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource">
            <summary>The "projects" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.ProjectsResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.Databases">
            <summary>Gets the Databases resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource">
            <summary>The "databases" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroups">
            <summary>Gets the CollectionGroups resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource">
            <summary>The "collectionGroups" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.Fields">
            <summary>Gets the Fields resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource">
            <summary>The "fields" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.Get(System.String)">
            <summary>Gets the metadata and configuration for a Field.</summary>
            <param name="name">A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_id}`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.GetRequest">
            <summary>Gets the metadata and configuration for a Field.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.GetRequest.Name">
            <summary>A name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/
            {collection_id}/fields/{field_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.List(System.String)">
             <summary>Lists the field configuration and metadata for this database.
            
             Currently, FirestoreAdmin.ListFields only supports listing fields that have been explicitly
             overridden. To issue this query, call FirestoreAdmin.ListFields with the filter set to
             `indexConfig.usesAncestorConfig:false`.</summary>
             <param name="parent">A parent name of the form
             `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.ListRequest">
             <summary>Lists the field configuration and metadata for this database.
            
             Currently, FirestoreAdmin.ListFields only supports listing fields that have been explicitly
             overridden. To issue this query, call FirestoreAdmin.ListFields with the filter set to
             `indexConfig.usesAncestorConfig:false`.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.ListRequest.Parent">
            <summary>A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.ListRequest.Filter">
            <summary>The filter to apply to list results. Currently, FirestoreAdmin.ListFields only
            supports listing fields that have been explicitly overridden. To issue this query, call
            FirestoreAdmin.ListFields with the filter set to
            `indexConfig.usesAncestorConfig:false`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.ListRequest.PageToken">
            <summary>A page token, returned from a previous call to FirestoreAdmin.ListFields, that may
            be used to get the next page of results.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.ListRequest.PageSize">
            <summary>The number of results to return.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.Patch(Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Field,System.String)">
             <summary>Updates a field configuration. Currently, field updates apply only to single field
             index configuration. However, calls to FirestoreAdmin.UpdateField should provide a field mask to
             avoid changing any configuration that the caller isn't aware of. The field mask should be
             specified as: `{ paths: "index_config" }`.
            
             This call returns a google.longrunning.Operation which may be used to track the status of the
             field update. The metadata for the operation will be the type FieldOperationMetadata.
            
             To configure the default field settings for the database, use the special `Field` with resource
             name:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields`.</summary>
             <param name="body">The body of the request.</param>
             <param name="name">A field name of the form
             `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
            
             A field path may be a simple field name, e.g. `address` or a path to fields within map_value , e.g. `address.city`,
             or a special field path. The only valid special field is `*`, which represents any field.
            
             Field paths may be quoted using ` (backtick). The only character that needs to be escaped within a quoted field path
             is the backtick character itself, escaped using a backslash. Special characters in field paths that must be quoted
             include: `*`, `.`, ``` (backtick), `[`, `]`, as well as any ascii symbolic characters.
            
             Examples: (Note: Comments here are written in markdown syntax, so there is an  additional layer of backticks to
             represent a code block) `\`address.city\`` represents a field named `address.city`, not the map key `city` in the
             field `address`. `\`*\`` represents a field named `*`, not any field.
            
             A special `Field` contains the default indexing settings for all fields. This field's resource name is:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields` Indexes defined on this `Field`
             will be applied to all fields which do not have their own `Field` index configuration.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.PatchRequest">
             <summary>Updates a field configuration. Currently, field updates apply only to single field
             index configuration. However, calls to FirestoreAdmin.UpdateField should provide a field mask to
             avoid changing any configuration that the caller isn't aware of. The field mask should be
             specified as: `{ paths: "index_config" }`.
            
             This call returns a google.longrunning.Operation which may be used to track the status of the
             field update. The metadata for the operation will be the type FieldOperationMetadata.
            
             To configure the default field settings for the database, use the special `Field` with resource
             name:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields`.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.PatchRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Field,System.String)">
            <summary>Constructs a new Patch request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.PatchRequest.Name">
             <summary>A field name of the form `projects/{project_id}/databases/{database_id}/collectionG
             roups/{collection_id}/fields/{field_path}`
            
             A field path may be a simple field name, e.g. `address` or a path to fields within map_value
             , e.g. `address.city`, or a special field path. The only valid special field is `*`, which
             represents any field.
            
             Field paths may be quoted using ` (backtick). The only character that needs to be escaped
             within a quoted field path is the backtick character itself, escaped using a backslash.
             Special characters in field paths that must be quoted include: `*`, `.`, ``` (backtick),
             `[`, `]`, as well as any ascii symbolic characters.
            
             Examples: (Note: Comments here are written in markdown syntax, so there is an additional
             layer of backticks to represent a code block) `\`address.city\`` represents a field named
             `address.city`, not the map key `city` in the field `address`. `\`*\`` represents a field
             named `*`, not any field.
            
             A special `Field` contains the default indexing settings for all fields. This field's
             resource name is:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields` Indexes
             defined on this `Field` will be applied to all fields which do not have their own `Field`
             index configuration.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.PatchRequest.UpdateMask">
            <summary>A mask, relative to the field. If specified, only configuration specified by this
            field_mask will be updated in the field.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.PatchRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.PatchRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.PatchRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.PatchRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.PatchRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.FieldsResource.PatchRequest.InitParameters">
            <summary>Initializes Patch parameter list.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.Indexes">
            <summary>Gets the Indexes resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource">
            <summary>The "indexes" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.Create(Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Index,System.String)">
            <summary>Creates a composite index. This returns a google.longrunning.Operation which may be
            used to track the status of the creation. The metadata for the operation will be the type
            IndexOperationMetadata.</summary>
            <param name="body">The body of the request.</param>
            <param name="parent">A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.CreateRequest">
            <summary>Creates a composite index. This returns a google.longrunning.Operation which may be
            used to track the status of the creation. The metadata for the operation will be the type
            IndexOperationMetadata.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.CreateRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Index,System.String)">
            <summary>Constructs a new Create request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.CreateRequest.Parent">
            <summary>A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.CreateRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.CreateRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.CreateRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.CreateRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.CreateRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.CreateRequest.InitParameters">
            <summary>Initializes Create parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.Delete(System.String)">
            <summary>Deletes a composite index.</summary>
            <param name="name">A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.DeleteRequest">
            <summary>Deletes a composite index.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.DeleteRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Delete request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.DeleteRequest.Name">
            <summary>A name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/
            {collection_id}/indexes/{index_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.DeleteRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.DeleteRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.DeleteRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.DeleteRequest.InitParameters">
            <summary>Initializes Delete parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.Get(System.String)">
            <summary>Gets a composite index.</summary>
            <param name="name">A name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.GetRequest">
            <summary>Gets a composite index.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.GetRequest.Name">
            <summary>A name of the form `projects/{project_id}/databases/{database_id}/collectionGroups/
            {collection_id}/indexes/{index_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.List(System.String)">
            <summary>Lists composite indexes.</summary>
            <param name="parent">A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.ListRequest">
            <summary>Lists composite indexes.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.ListRequest.Parent">
            <summary>A parent name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.ListRequest.Filter">
            <summary>The filter to apply to list results.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.ListRequest.PageToken">
            <summary>A page token, returned from a previous call to FirestoreAdmin.ListIndexes, that may
            be used to get the next page of results.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.ListRequest.PageSize">
            <summary>The number of results to return.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.CollectionGroupsResource.IndexesResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.Operations">
            <summary>Gets the Operations resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource">
            <summary>The "operations" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.Cancel(Google.Apis.Firestore.v1.Data.GoogleLongrunningCancelOperationRequest,System.String)">
            <summary>Starts asynchronous cancellation on a long-running operation.  The server makes a best
            effort to cancel the operation, but success is not guaranteed.  If the server doesn't support this
            method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
            other methods to check whether the cancellation succeeded or whether the operation completed despite
            cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
            operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
            `Code.CANCELLED`.</summary>
            <param name="body">The body of the request.</param>
            <param name="name">The name of the operation resource to be cancelled.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.CancelRequest">
            <summary>Starts asynchronous cancellation on a long-running operation.  The server makes a best
            effort to cancel the operation, but success is not guaranteed.  If the server doesn't support this
            method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
            other methods to check whether the cancellation succeeded or whether the operation completed despite
            cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
            operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
            `Code.CANCELLED`.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.CancelRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1.Data.GoogleLongrunningCancelOperationRequest,System.String)">
            <summary>Constructs a new Cancel request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.CancelRequest.Name">
            <summary>The name of the operation resource to be cancelled.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.CancelRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.CancelRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.CancelRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.CancelRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.CancelRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.CancelRequest.InitParameters">
            <summary>Initializes Cancel parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.Delete(System.String)">
            <summary>Deletes a long-running operation. This method indicates that the client is no longer
            interested in the operation result. It does not cancel the operation. If the server doesn't support
            this method, it returns `google.rpc.Code.UNIMPLEMENTED`.</summary>
            <param name="name">The name of the operation resource to be deleted.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.DeleteRequest">
            <summary>Deletes a long-running operation. This method indicates that the client is no longer
            interested in the operation result. It does not cancel the operation. If the server doesn't support
            this method, it returns `google.rpc.Code.UNIMPLEMENTED`.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.DeleteRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Delete request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.DeleteRequest.Name">
            <summary>The name of the operation resource to be deleted.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.DeleteRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.DeleteRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.DeleteRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.DeleteRequest.InitParameters">
            <summary>Initializes Delete parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.Get(System.String)">
            <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
            operation result at intervals as recommended by the API service.</summary>
            <param name="name">The name of the operation resource.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.GetRequest">
            <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
            operation result at intervals as recommended by the API service.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.GetRequest.Name">
            <summary>The name of the operation resource.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.List(System.String)">
             <summary>Lists operations that match the specified filter in the request. If the server doesn't
             support this method, it returns `UNIMPLEMENTED`.
            
             NOTE: the `name` binding allows API services to override the binding to use different resource name
             schemes, such as `users/operations`. To override the binding, API services can add a binding such as
             `"/v1/{name=users}/operations"` to their service configuration. For backwards compatibility, the
             default name includes the operations collection id, however overriding users must ensure the name
             binding is the parent resource, without the operations collection id.</summary>
             <param name="name">The name of the operation's parent resource.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.ListRequest">
             <summary>Lists operations that match the specified filter in the request. If the server doesn't
             support this method, it returns `UNIMPLEMENTED`.
            
             NOTE: the `name` binding allows API services to override the binding to use different resource name
             schemes, such as `users/operations`. To override the binding, API services can add a binding such as
             `"/v1/{name=users}/operations"` to their service configuration. For backwards compatibility, the
             default name includes the operations collection id, however overriding users must ensure the name
             binding is the parent resource, without the operations collection id.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.ListRequest.Name">
            <summary>The name of the operation's parent resource.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.ListRequest.Filter">
            <summary>The standard list filter.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.ListRequest.PageToken">
            <summary>The standard list page token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.ListRequest.PageSize">
            <summary>The standard list page size.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.OperationsResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ExportDocuments(Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsRequest,System.String)">
            <summary>Exports a copy of all or a subset of documents from Google Cloud Firestore to another storage
            system, such as Google Cloud Storage. Recent updates to documents may not be reflected in the export.
            The export occurs in the background and its progress can be monitored and managed via the Operation
            resource that is created. The output of an export may only be used once the associated operation is
            done. If an export operation is cancelled before completion it may leave partial data behind in Google
            Cloud Storage.</summary>
            <param name="body">The body of the request.</param>
            <param name="name">Database to export. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ExportDocumentsRequest">
            <summary>Exports a copy of all or a subset of documents from Google Cloud Firestore to another storage
            system, such as Google Cloud Storage. Recent updates to documents may not be reflected in the export.
            The export occurs in the background and its progress can be monitored and managed via the Operation
            resource that is created. The output of an export may only be used once the associated operation is
            done. If an export operation is cancelled before completion it may leave partial data behind in Google
            Cloud Storage.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ExportDocumentsRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsRequest,System.String)">
            <summary>Constructs a new ExportDocuments request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ExportDocumentsRequest.Name">
            <summary>Database to export. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ExportDocumentsRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ExportDocumentsRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ExportDocumentsRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ExportDocumentsRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ExportDocumentsRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ExportDocumentsRequest.InitParameters">
            <summary>Initializes ExportDocuments parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ImportDocuments(Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsRequest,System.String)">
            <summary>Imports documents into Google Cloud Firestore. Existing documents with the same name are
            overwritten. The import occurs in the background and its progress can be monitored and managed via the
            Operation resource that is created. If an ImportDocuments operation is cancelled, it is possible that a
            subset of the data has already been imported to Cloud Firestore.</summary>
            <param name="body">The body of the request.</param>
            <param name="name">Database to import into. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ImportDocumentsRequest">
            <summary>Imports documents into Google Cloud Firestore. Existing documents with the same name are
            overwritten. The import occurs in the background and its progress can be monitored and managed via the
            Operation resource that is created. If an ImportDocuments operation is cancelled, it is possible that a
            subset of the data has already been imported to Cloud Firestore.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ImportDocumentsRequest.#ctor(Google.Apis.Services.IClientService,Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsRequest,System.String)">
            <summary>Constructs a new ImportDocuments request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ImportDocumentsRequest.Name">
            <summary>Database to import into. Should be of the form:
            `projects/{project_id}/databases/{database_id}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ImportDocumentsRequest.Body">
            <summary>Gets or sets the body of this request.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ImportDocumentsRequest.GetBody">
            <summary>Returns the body of the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ImportDocumentsRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ImportDocumentsRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ImportDocumentsRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.DatabasesResource.ImportDocumentsRequest.InitParameters">
            <summary>Initializes ImportDocuments parameter list.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.Locations">
            <summary>Gets the Locations resource.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource">
            <summary>The "locations" collection of methods.</summary>
        </member>
        <member name="F:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.service">
            <summary>The service which this resource belongs to.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.#ctor(Google.Apis.Services.IClientService)">
            <summary>Constructs a new resource.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.Get(System.String)">
            <summary>Gets information about a location.</summary>
            <param name="name">Resource name for the location.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.GetRequest">
            <summary>Gets information about a location.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.GetRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new Get request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.GetRequest.Name">
            <summary>Resource name for the location.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.GetRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.GetRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.GetRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.GetRequest.InitParameters">
            <summary>Initializes Get parameter list.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.List(System.String)">
            <summary>Lists information about the supported locations for this service.</summary>
            <param name="name">The resource that owns the locations collection, if applicable.</param>
        </member>
        <member name="T:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.ListRequest">
            <summary>Lists information about the supported locations for this service.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.ListRequest.#ctor(Google.Apis.Services.IClientService,System.String)">
            <summary>Constructs a new List request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.ListRequest.Name">
            <summary>The resource that owns the locations collection, if applicable.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.ListRequest.Filter">
            <summary>The standard list filter.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.ListRequest.PageToken">
            <summary>The standard list page token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.ListRequest.PageSize">
            <summary>The standard list page size.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.ListRequest.MethodName">
            <summary>Gets the method name.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.ListRequest.HttpMethod">
            <summary>Gets the HTTP method.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.ListRequest.RestPath">
            <summary>Gets the REST path.</summary>
        </member>
        <member name="M:Google.Apis.Firestore.v1.ProjectsResource.LocationsResource.ListRequest.InitParameters">
            <summary>Initializes List parameter list.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.Empty">
             <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
             typical example is to use it as the request or the response type of an API method. For instance:
            
             service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
            
             The JSON representation for `Empty` is empty JSON object `{}`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Empty.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsMetadata">
            <summary>Metadata for google.longrunning.Operation results from FirestoreAdmin.ExportDocuments.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsMetadata.CollectionIds">
            <summary>Which collection ids are being exported.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsMetadata.EndTime">
            <summary>The time this operation completed. Will be unset if operation still in progress.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsMetadata.OperationState">
            <summary>The state of the export operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsMetadata.OutputUriPrefix">
            <summary>Where the entities are being exported to.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsMetadata.ProgressBytes">
            <summary>The progress, in bytes, of this operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsMetadata.ProgressDocuments">
            <summary>The progress, in documents, of this operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsMetadata.StartTime">
            <summary>The time this operation started.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsMetadata.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsRequest">
            <summary>The request for FirestoreAdmin.ExportDocuments.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsRequest.CollectionIds">
            <summary>Which collection ids to export. Unspecified means all collections.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsRequest.OutputUriPrefix">
            <summary>The output URI. Currently only supports Google Cloud Storage URIs of the form:
            `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name of the Google Cloud Storage bucket and
            `NAMESPACE_PATH` is an optional Google Cloud Storage namespace path. When choosing a name, be sure to
            consider Google Cloud Storage naming guidelines: https://cloud.google.com/storage/docs/naming. If the URI is
            a bucket (without a namespace path), a prefix will be generated based on the start time.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsResponse">
            <summary>Returned in the google.longrunning.Operation response field.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsResponse.OutputUriPrefix">
            <summary>Location of the output files. This can be used to begin an import into Cloud Firestore (this
            project or another project) after the operation completes successfully.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ExportDocumentsResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Field">
             <summary>Represents a single field in the database.
            
             Fields are grouped by their "Collection Group", which represent all collections in the database with the same
             id.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Field.IndexConfig">
            <summary>The index configuration for this field. If unset, field indexing will revert to the configuration
            defined by the `ancestor_field`. To explicitly remove all indexes for this field, specify an index config
            with an empty list of indexes.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Field.Name">
             <summary>A field name of the form
             `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
            
             A field path may be a simple field name, e.g. `address` or a path to fields within map_value , e.g.
             `address.city`, or a special field path. The only valid special field is `*`, which represents any field.
            
             Field paths may be quoted using ` (backtick). The only character that needs to be escaped within a quoted
             field path is the backtick character itself, escaped using a backslash. Special characters in field paths
             that must be quoted include: `*`, `.`, ``` (backtick), `[`, `]`, as well as any ascii symbolic characters.
            
             Examples: (Note: Comments here are written in markdown syntax, so there is an additional layer of backticks
             to represent a code block) `\`address.city\`` represents a field named `address.city`, not the map key
             `city` in the field `address`. `\`*\`` represents a field named `*`, not any field.
            
             A special `Field` contains the default indexing settings for all fields. This field's resource name is:
             `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields` Indexes defined on this
             `Field` will be applied to all fields which do not have their own `Field` index configuration.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Field.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1FieldOperationMetadata">
            <summary>Metadata for google.longrunning.Operation results from FirestoreAdmin.UpdateField.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1FieldOperationMetadata.EndTime">
            <summary>The time this operation completed. Will be unset if operation still in progress.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1FieldOperationMetadata.Field">
            <summary>The field resource that this operation is acting on. For example: `projects/{project_id}/databases/
            {database_id}/collectionGroups/{collection_id}/fields/{field_path}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1FieldOperationMetadata.IndexConfigDeltas">
            <summary>A list of IndexConfigDelta, which describe the intent of this operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1FieldOperationMetadata.ProgressBytes">
            <summary>The progress, in bytes, of this operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1FieldOperationMetadata.ProgressDocuments">
            <summary>The progress, in documents, of this operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1FieldOperationMetadata.StartTime">
            <summary>The time this operation started.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1FieldOperationMetadata.State">
            <summary>The state of the operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1FieldOperationMetadata.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsMetadata">
            <summary>Metadata for google.longrunning.Operation results from FirestoreAdmin.ImportDocuments.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsMetadata.CollectionIds">
            <summary>Which collection ids are being imported.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsMetadata.EndTime">
            <summary>The time this operation completed. Will be unset if operation still in progress.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsMetadata.InputUriPrefix">
            <summary>The location of the documents being imported.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsMetadata.OperationState">
            <summary>The state of the import operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsMetadata.ProgressBytes">
            <summary>The progress, in bytes, of this operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsMetadata.ProgressDocuments">
            <summary>The progress, in documents, of this operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsMetadata.StartTime">
            <summary>The time this operation started.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsMetadata.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsRequest">
            <summary>The request for FirestoreAdmin.ImportDocuments.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsRequest.CollectionIds">
            <summary>Which collection ids to import. Unspecified means all collections included in the import.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsRequest.InputUriPrefix">
            <summary>Location of the exported files. This must match the output_uri_prefix of an ExportDocumentsResponse
            from an export that has completed successfully. See:
            google.firestore.admin.v1.ExportDocumentsResponse.output_uri_prefix.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ImportDocumentsRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Index">
            <summary>Cloud Firestore indexes enable simple and complex queries against documents in a database.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Index.Fields">
             <summary>The fields supported by this index.
            
             For composite indexes, this is always 2 or more fields. The last field entry is always for the field path
             `__name__`. If, on creation, `__name__` was not specified as the last field, it will be added automatically
             with the same direction as that of the last field defined. If the final field in a composite index is not
             directional, the `__name__` will be ordered ASCENDING (unless explicitly specified).
            
             For single field indexes, this will always be exactly one entry with a field path equal to the field path of
             the associated field.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Index.Name">
            <summary>Output only. A server defined name for this index. The form of this name for composite indexes will
            be: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index
            _id}` For single field indexes, this field will be empty.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Index.QueryScope">
             <summary>Indexes with a collection query scope specified allow queries against a collection that is the
             child of a specific document, specified at query time, and that has the same collection id.
            
             Indexes with a collection group query scope specified allow queries against all collections descended from a
             specific document, specified at query time, and that have the same collection id as this index.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Index.State">
            <summary>Output only. The serving state of the index.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Index.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexConfig">
            <summary>The index configuration for this field.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexConfig.AncestorField">
            <summary>Output only. Specifies the resource name of the `Field` from which this field's index configuration
            is set (when `uses_ancestor_config` is true), or from which it *would* be set if this field had no index
            configuration (when `uses_ancestor_config` is false).</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexConfig.Indexes">
            <summary>The indexes supported for this field.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexConfig.Reverting">
            <summary>Output only When true, the `Field`'s index configuration is in the process of being reverted. Once
            complete, the index config will transition to the same state as the field specified by `ancestor_field`, at
            which point `uses_ancestor_config` will be `true` and `reverting` will be `false`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexConfig.UsesAncestorConfig">
            <summary>Output only. When true, the `Field`'s index configuration is set from the configuration specified
            by the `ancestor_field`. When false, the `Field`'s index configuration is defined explicitly.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexConfig.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexConfigDelta">
            <summary>Information about an index configuration change.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexConfigDelta.ChangeType">
            <summary>Specifies how the index is changing.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexConfigDelta.Index">
            <summary>The index being changed.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexConfigDelta.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexField">
            <summary>A field in an index. The field_path describes which field is indexed, the value_mode describes how the
            field value is indexed.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexField.ArrayConfig">
            <summary>Indicates that this field supports operations on `array_value`s.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexField.FieldPath">
            <summary>Can be __name__. For single field indexes, this must match the name of the field or may be
            omitted.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexField.Order" -->
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexField.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexOperationMetadata">
            <summary>Metadata for google.longrunning.Operation results from FirestoreAdmin.CreateIndex.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexOperationMetadata.EndTime">
            <summary>The time this operation completed. Will be unset if operation still in progress.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexOperationMetadata.Index">
            <summary>The index resource that this operation is acting on. For example: `projects/{project_id}/databases/
            {database_id}/collectionGroups/{collection_id}/indexes/{index_id}`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexOperationMetadata.ProgressBytes">
            <summary>The progress, in bytes, of this operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexOperationMetadata.ProgressDocuments">
            <summary>The progress, in documents, of this operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexOperationMetadata.StartTime">
            <summary>The time this operation started.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexOperationMetadata.State">
            <summary>The state of the operation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1IndexOperationMetadata.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ListFieldsResponse">
            <summary>The response for FirestoreAdmin.ListFields.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ListFieldsResponse.Fields">
            <summary>The requested fields.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ListFieldsResponse.NextPageToken">
            <summary>A page token that may be used to request another page of results. If blank, this is the last
            page.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ListFieldsResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ListIndexesResponse">
            <summary>The response for FirestoreAdmin.ListIndexes.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ListIndexesResponse.Indexes">
            <summary>The requested indexes.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ListIndexesResponse.NextPageToken">
            <summary>A page token that may be used to request another page of results. If blank, this is the last
            page.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1ListIndexesResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1LocationMetadata">
            <summary>The metadata message for google.cloud.location.Location.metadata.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1LocationMetadata.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Progress">
            <summary>Describes the progress of the operation. Unit of work is generic and must be interpreted based on where
            Progress is used.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Progress.CompletedWork">
            <summary>The amount of work completed.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Progress.EstimatedWork">
            <summary>The amount of work estimated.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleFirestoreAdminV1Progress.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleLongrunningCancelOperationRequest">
            <summary>The request message for Operations.CancelOperation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleLongrunningCancelOperationRequest.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleLongrunningListOperationsResponse">
            <summary>The response message for Operations.ListOperations.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleLongrunningListOperationsResponse.NextPageToken">
            <summary>The standard List next-page token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleLongrunningListOperationsResponse.Operations">
            <summary>A list of operations that matches the specified filter in the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleLongrunningListOperationsResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.GoogleLongrunningOperation">
            <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleLongrunningOperation.Done">
            <summary>If the value is `false`, it means the operation is still in progress. If `true`, the operation is
            completed, and either `error` or `response` is available.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleLongrunningOperation.Error">
            <summary>The error result of the operation in case of failure or cancellation.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleLongrunningOperation.Metadata">
            <summary>Service-specific metadata associated with the operation.  It typically contains progress
            information and common metadata such as create time. Some services might not provide such metadata.  Any
            method that returns a long-running operation should document the metadata type, if any.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleLongrunningOperation.Name">
            <summary>The server-assigned name, which is only unique within the same service that originally returns it.
            If you use the default HTTP mapping, the `name` should have the format of
            `operations/some/unique/name`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleLongrunningOperation.Response">
            <summary>The normal response of the operation in case of success.  If the original method returns no data on
            success, such as `Delete`, the response is `google.protobuf.Empty`.  If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource.  For other methods, the response should have
            the type `XxxResponse`, where `Xxx` is the original method name.  For example, if the original method name
            is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.GoogleLongrunningOperation.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.ListLocationsResponse">
            <summary>The response message for Locations.ListLocations.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.ListLocationsResponse.Locations">
            <summary>A list of locations that matches the specified filter in the request.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.ListLocationsResponse.NextPageToken">
            <summary>The standard List next-page token.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.ListLocationsResponse.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.Location">
            <summary>A resource that represents Google Cloud Platform location.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Location.DisplayName">
            <summary>The friendly name for this location, typically a nearby city name. For example, "Tokyo".</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Location.Labels">
             <summary>Cross-service attributes for the location. For example
            
             {"cloud.googleapis.com/region": "us-east1"}</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Location.LocationId">
            <summary>The canonical id for this location. For example: `"us-east1"`.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Location.Metadata">
            <summary>Service-specific metadata. For example the available capacity at the given location.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Location.Name">
            <summary>Resource name for the location, which may vary between implementations. For example: `"projects
            /example-project/locations/us-east1"`</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Location.ETag">
            <summary>The ETag of the item.</summary>
        </member>
        <member name="T:Google.Apis.Firestore.v1.Data.Status">
             <summary>The `Status` type defines a logical error model that is suitable for different programming
             environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model
             is designed to be:
            
             - Simple to use and understand for most users - Flexible enough to meet unexpected needs
            
             # Overview
            
             The `Status` message contains three pieces of data: error code, error message, and error details. The error code
             should be an enum value of google.rpc.Code, but it may accept additional error codes if needed.  The error
             message should be a developer-facing English message that helps developers *understand* and *resolve* the error.
             If a localized user-facing error message is needed, put the localized message in the error details or localize
             it in the client. The optional error details may contain arbitrary information about the error. There is a
             predefined set of error detail types in the package `google.rpc` that can be used for common error conditions.
            
             # Language mapping
            
             The `Status` message is the logical representation of the error model, but it is not necessarily the actual wire
             format. When the `Status` message is exposed in different client libraries and different wire protocols, it can
             be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped
             to some error codes in C.
            
             # Other uses
            
             The error model and the `Status` message can be used in a variety of environments, either with or without APIs,
             to provide a consistent developer experience across different environments.
            
             Example uses of this error model include:
            
             - Partial errors. If a service needs to return partial errors to the client, it may embed the `Status` in the
             normal response to indicate the partial errors.
            
             - Workflow errors. A typical workflow has multiple steps. Each step may have a `Status` message for error
             reporting.
            
             - Batch operations. If a client uses batch request and batch response, the `Status` message should be used
             directly inside batch response, one for each error sub-response.
            
             - Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of
             those operations should be represented directly using the `Status` message.
            
             - Logging. If some API errors are stored in logs, the message `Status` could be used directly after any
             stripping needed for security/privacy reasons.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Status.Code">
            <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Status.Details">
            <summary>A list of messages that carry the error details.  There is a common set of message types for APIs
            to use.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Status.Message">
            <summary>A developer-facing error message, which should be in English. Any user-facing error message should
            be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        </member>
        <member name="P:Google.Apis.Firestore.v1.Data.Status.ETag">
            <summary>The ETag of the item.</summary>
        </member>
    </members>
</doc>
